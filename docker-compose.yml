services:

  exporter:
    build:
      context: ./exporter
    volumes:
      - /sys:/sys:ro  # required to access /sys/fs/cgroup/docker/CONTAINER_ID
    privileged: true  # required to run bpftrace, as an alternative could try setting CAP_BPF, CAP_PERFMON
    pid: host         # required to trace processes from host
    ports:
      - "9262:9262"

  mem-stress:
    image: python:3-slim
    volumes:
      - ./mem-stress:/app
    working_dir: /app
    command: python3 main.py
    restart: on-failure
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 128MiB
        reservations:
          memory: 64MiB
    # mem_swappiness: 0     # this doesn't seem to work to restrict swap usage, nor does it change effective swappiness value in memcg
    memswap_limit: 128MiB   # by default swap = mem => 2x total memory, disable swap by setting memswap_limit = mem_limit
    stop_grace_period: 1s

  # stress:
  #   image: polinux/stress-ng
  #   # command: stress-ng --vm 2 --vm-bytes 256M --vm-keep --vm-hang 1 --timeout 60s
  #   # command: stress-ng --vm 4 --vm-bytes 64M --vm-keep --vm-hang 0 --timeout 60s
  #   command: stress-ng --vm 4 --vm-bytes 64M --timeout 60s
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 128M
  #       reservations:
  #         memory: 128M
  #   stop_grace_period: 1s

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    ports:
      - "3000:3000"

volumes:
  prometheus_data:
  grafana_data:
